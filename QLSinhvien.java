/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ASM;

import java.awt.Image;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.ir.BreakNode;
import lab5.Student;

/**
 *
 * @author hoang
 */
public class QLSinhvien extends javax.swing.JFrame {

    /**
     * Creates new form QLSinhvien
     */
    String hinhanh = "";
    boolean gt;
    int index;
    DefaultTableModel model;
    Connection cn;
    ArrayList<Sinhvien> list = new ArrayList<>();
    public QLSinhvien() {
        initComponents();
        setTitle("Quản lý Sinh viên");
        setLocationRelativeTo(null);
        setResizable(false);
        radionam.setSelected(true);
        model = (DefaultTableModel) tblkq.getModel();
        cn = SQL.DAO("ASMjava3");
        if (cn != null) {
            LoadDataToList();
        } else {
            JOptionPane.showMessageDialog(this, "kết nối thất bại");
            dispose();
        }
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtmasv = new javax.swing.JTextField();
        txthoten = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtsodt = new javax.swing.JTextField();
        radionam = new javax.swing.JRadioButton();
        radionu = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdiachi = new javax.swing.JTextArea();
        lblhinhanh = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblkq = new javax.swing.JTable();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Quản Lý Sinh Viên");

        jPanel1.setLayout(new java.awt.GridLayout(6, 1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("MaSv:");
        jPanel1.add(jLabel5);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Họ tên:");
        jPanel1.add(jLabel3);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Email:");
        jPanel1.add(jLabel2);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Số ĐT:");
        jPanel1.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Giới tính:");
        jPanel1.add(jLabel7);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("Địa chỉ:");
        jPanel1.add(jLabel8);

        buttonGroup1.add(radionam);
        radionam.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radionam.setText("Nam");

        buttonGroup1.add(radionu);
        radionu.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radionu.setText("Nữ");

        txtdiachi.setColumns(20);
        txtdiachi.setRows(5);
        jScrollPane2.setViewportView(txtdiachi);

        lblhinhanh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblhinhanh.setText("Hình Ảnh");
        lblhinhanh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblhinhanh.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblhinhanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblhinhanhMouseClicked(evt);
            }
        });

        jPanel2.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Add.png"))); // NOI18N
        btnnew.setText("NEW");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        jPanel2.add(btnnew);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave);

        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btndelete);

        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Edit.png"))); // NOI18N
        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnupdate);

        tblkq.setForeground(new java.awt.Color(0, 0, 51));
        tblkq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manv", "Họ tên", "Email", "Số Đt", "Giới tính", "Địa chỉ", "Hình"
            }
        ));
        tblkq.setGridColor(new java.awt.Color(51, 255, 51));
        tblkq.setRowHeight(30);
        tblkq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblkqMouseClicked(evt);
            }
        });
        tblkq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblkqKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblkq);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtemail)
                    .addComponent(txtsodt)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radionam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radionu))))
                    .addComponent(txtmasv)
                    .addComponent(txthoten))
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblhinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(317, 317, 317))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtmasv, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtsodt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblhinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radionam)
                                    .addComponent(radionu))
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void LoadDataToList() {
        list.clear();
        try {
            String sql = "select * from Students ";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                String masv = rs.getString(1);
                String hoten = rs.getString(2);
                String email = rs.getString(3);
                String sodt = rs.getString(4);
                boolean gioitinh = rs.getBoolean(5);
                String diachi = rs.getString(6);
                String hinh = rs.getString(7);
                list.add(new Sinhvien(masv, hoten, email, sodt, gioitinh, diachi, hinh));
                //model.addRow(new Object[]{masv, hoten, email, sodt, gioitinh, diachi, hinh});
            }
            filltable();
            st.close();
        } catch (Exception e) {
        }
    }

    void filltable() {
        model.setRowCount(0);
        list.forEach((x) -> model.addRow(new Object[]{x.masv, x.hoten, x.email, x.sodt, x.gioitinh, x.diachi, x.anh}));
    }
    boolean checkmasv() {
        if (list.size() > 0) {
            for (Sinhvien x : list) {
                if (x.masv.equals(txtmasv.getText())) {
                    JOptionPane.showMessageDialog(this, "mã sv bị trùng");
                    return false;
                }
            }
        }
        return true;
    }
    public boolean check() {
        if (txtmasv.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "mã sv k dc để trống");
            txtmasv.requestFocus();
            return false;
        }

        if (txthoten.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "họ tên sv k dc để trống");
            txthoten.requestFocus();
            return false;
        }
        if (txtemail.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Email k dc để trống");
            txtemail.requestFocus();
            return false;
        }
        String email = "\\w+@\\w+(\\.\\w+){1,2}";
        if (!txtemail.getText().matches(email)) {
            JOptionPane.showMessageDialog(this, "Sai cú pháp email !!!");
            txtemail.requestFocus();
            return false;
        }
        if (txtsodt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "sdt k dc để trống");
            txtsodt.requestFocus();
            return false;
        }
        String sodt="\\d{10}";
        if (!txtsodt.getText().matches(sodt)) {
            JOptionPane.showMessageDialog(this, "sdt k đúng cú pháp");
            txtsodt.requestFocus();
            return false;
        }
        if (txtdiachi.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "dịa chỉ k dc để trống");
            txtdiachi.requestFocus();
            return false;
        }
        gt = radionam.isSelected() ? true : false;
        return true;
    }
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (check() && checkmasv()) {
            try {
                String sql = "insert into students values(?,?,?,?,?,?,?)";
                PreparedStatement st = cn.prepareStatement(sql);
                st.setString(1, txtmasv.getText());
                st.setString(2, txthoten.getText());
                st.setString(3, txtemail.getText());
                st.setString(4, txtsodt.getText());
                st.setBoolean(5, gt);
                st.setString(6, txtdiachi.getText());
                st.setString(7, hinhanh);
                int row = st.executeUpdate();
                if (row > 0) {
                    JOptionPane.showMessageDialog(this, "thêm thành công");
                    list.add(new Sinhvien(txtmasv.getText(), txthoten.getText(), txtemail.getText(), txtsodt.getText(), gt, txtdiachi.getText(), hinhanh));
                    model.addRow(new Object[]{txtmasv.getText(), txthoten.getText(), txtemail.getText(), txtsodt.getText(), gt, txtdiachi.getText(), hinhanh});
                } else {
                    JOptionPane.showMessageDialog(this, "thêm k thành công");
                }
                st.close();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed
    void display(int vitri) {
        txtmasv.setEditable(false);
        Sinhvien sv = list.get(vitri);
        txtmasv.setText(sv.masv);
        txthoten.setText(sv.hoten);
        txtemail.setText(sv.email);
        txtsodt.setText(sv.sodt);
        boolean gt = sv.gioitinh;
        if (gt == true) {
            radionam.setSelected(true);
        } else {
            radionu.setSelected(true);
        }
        txtdiachi.setText(sv.diachi);
        String anh = sv.anh;
        if (anh.equals("")) {
            lblhinhanh.setText("No Avatar");
            lblhinhanh.setIcon(null);
        } else {
            ImageIcon imgIcon = new ImageIcon(getClass().getResource("/Images/" + anh));
            Image img = imgIcon.getImage();
            img.getScaledInstance(lblhinhanh.getWidth(), lblhinhanh.getHeight(), 0);
            lblhinhanh.setText("");
            lblhinhanh.setIcon(imgIcon);
            tblkq.setRowSelectionInterval(vitri, vitri);
            
        }
    }
    private void tblkqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblkqMouseClicked
        int row = tblkq.getSelectedRow();
        index = row;
        display(index);
        // TODO add your handling code here:
    }//GEN-LAST:event_tblkqMouseClicked

    private void lblhinhanhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblhinhanhMouseClicked
        try {
            JFileChooser jfc = new JFileChooser("D:\\JAVA3\\src\\Images");
            int chon = jfc.showOpenDialog(null);
            if (chon == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();
                Image img = ImageIO.read(file);
                hinhanh = file.getName();
                lblhinhanh.setText("");
                lblhinhanh.setIcon(new ImageIcon(img.getScaledInstance(lblhinhanh.getWidth(), lblhinhanh.getHeight(), 0)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_lblhinhanhMouseClicked

    private void tblkqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblkqKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_tblkqKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            cn.close();        // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(QLSinhvien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        int row = tblkq.getSelectedRow();
        if (row < 0) {
            try {
                boolean co = false;
                String upadte = (String) JOptionPane.showInputDialog(this, "Mời nhập mã sv");
                if (upadte != null && upadte.length() > 0) {
                    for (int i = 0; i < list.size(); i++) {
                        if (list.get(i).masv.equalsIgnoreCase(upadte)) {
                            index = i;
                            display(index);
                            co = true;
                        }
                    }
                    if (co == false) {
                        JOptionPane.showMessageDialog(this, "Không có sinhviên");
                        return;
                    }
                }
            } catch (Exception e) {
            }
        } else {
            try {
                if (check()) {
                    String sql = "update students set hoten=?,email=?,sodt=?,diachi=?,hinh=? where masv=?";
                    PreparedStatement st = cn.prepareStatement(sql);
                    st.setString(1, txthoten.getText());
                    st.setString(2, txtemail.getText());
                    st.setString(3, txtsodt.getText());
                    st.setString(4, txtdiachi.getText());
                    st.setString(6, txtmasv.getText());
                    int up = st.executeUpdate();
                    if (up > 0) {
                        JOptionPane.showMessageDialog(this, "update thành công");
                        LoadDataToList();
                    } else {
                        JOptionPane.showMessageDialog(this, "update k thành công");
                    }
                    st.close();
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnupdateActionPerformed
void news(){
        txtmasv.setText("");
        txthoten.setText("");
        txtdiachi.setText("");
        txtsodt.setText("");
        txtemail.setText("");
        radionam.setSelected(true);
        txtmasv.setEditable(true);
}
    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        // TODO add your handling code here:
        news();
    }//GEN-LAST:event_btnnewActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
         int row = tblkq.getSelectedRow();
         try {
        if (row < 0) {
                boolean co = false;
                String delete= (String) JOptionPane.showInputDialog(this, "Mời nhập mã sv");
                if (delete != null && delete.length() > 0) {
                    String sql = "Select masv from GARADE ";
                    Statement st=cn.createStatement();
                    ResultSet rs = st.executeQuery(sql);
                    while (rs.next()) {
                        String masv = rs.getString(1);
                        if (masv.equals(delete)) {
                            JOptionPane.showMessageDialog(this, "Không được xóa ");
                            return;
                        }
                    }
                    for (int i = 0; i < list.size(); i++) {
                        if (list.get(i).masv.equalsIgnoreCase(delete)) {
                            int Hoi = JOptionPane.showConfirmDialog(this, "có xóa k?", "", JOptionPane.YES_NO_OPTION);
                            if (Hoi == JOptionPane.YES_OPTION) {
                                String sql1 = "delete students where masv=?";
                                PreparedStatement st1 = cn.prepareStatement(sql1);
                                st1.setString(1, delete);
                                int up = st1.executeUpdate();
                                if (up > 0) {
                                    JOptionPane.showMessageDialog(this, "xóa thành công");
                                    LoadDataToList();
                                } else {
                                    JOptionPane.showMessageDialog(this, "xóa k thành công");
                                }
                                st.close();
                            }
                            co=true;
                        }
                    }
                    if (co == false) {
                        JOptionPane.showMessageDialog(this, "Không có sinhviên");
                        return;
                    }
                }
        } else {
               String sql = "Select masv from GARADE ";
                    Statement st=cn.createStatement();
                    ResultSet rs = st.executeQuery(sql);
                    while (rs.next()) {
                        String masv = rs.getString(1);
                        if (masv.equals(txtmasv.getText())) {
                            JOptionPane.showMessageDialog(this, "Không được xóa ");
                            return;
                        }
                    }
                int Hoi = JOptionPane.showConfirmDialog(this, "có xóa k?", "", JOptionPane.YES_NO_OPTION);
                if (Hoi == JOptionPane.YES_OPTION) {
                    list.remove(index);
                    model.removeRow(index);
                    String sql1 = "delete students where masv=?";
                    PreparedStatement st1 = cn.prepareStatement(sql1);
                    st1.setString(1, txtmasv.getText());
                    int up = st1.executeUpdate();
                    if (up > 0) {
                        JOptionPane.showMessageDialog(this, "xóa thành công");
                        if(list.size()==0){
                            news();
                        }
                        else{
                            if(index==list.size()){
                                index--;
                            }
                            display(index);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "xóa k thành công");
                    }
                    st.close();
                    st1.close();
                }
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btndeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSinhvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSinhvien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblhinhanh;
    private javax.swing.JRadioButton radionam;
    private javax.swing.JRadioButton radionu;
    private javax.swing.JTable tblkq;
    private javax.swing.JTextArea txtdiachi;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txthoten;
    private javax.swing.JTextField txtmasv;
    private javax.swing.JTextField txtsodt;
    // End of variables declaration//GEN-END:variables
}
